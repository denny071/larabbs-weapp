<style lang="less">
  @import 'style/weui.less';
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import api from '@/utils/api'
  export default class extends wepy.app {
    config = {
      pages: [
        'pages/topics/index',
        'pages/topics/show',
        'pages/topics/userIndex',
        'pages/replies/index',
        'pages/replies/userIndex',
        'pages/replies/create',
        'pages/user/me',
        'pages/user/edit',
        'pages/user/show',
        'pages/auth/login',
        'pages/auth/register'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: 'Larabbs',
        navigationBarTextStyle: 'black'
      },
      tabBar: {
        list: [{
          pagePath: 'pages/topics/index',
          text: '首页',
          iconPath: 'images/index.png',
          selectedIconPath: 'images/index_selected.png'
        }, {
          pagePath: 'pages/user/me',
          text: '我的',
          iconPath: 'images/user.png',
          selectedIconPath: 'images/user_selected.png'
        }],
        color: '#707070',
        selectedColor: '#00b5ad'
      }
    }
    globalData = {
      refreshPages: [],
      unreadCount: 0
    }
    checkRefreshPages(route, callback) {
      let refreshIndex = this.globalData.refreshPages.indexOf(route)
      if (refreshIndex === -1) {
        return
      }
      this.globalData.refreshPages.splice(refreshIndex, 1)
      callback && callback()
    }
    constructor() {
      super()
      this.use('requestfix')
      this.use('promisify')
    }
    onLaunch() {
      this.updateUnreadCount()
      setInterval(() => {
        this.updateUnreadCount()
      }, 60000)
    }
    // 获得当前登录用户信息
    async getCurrentUser() {
      // 用户未登录
      if (!this.checkLogin()) {
        return null
      }
      // 从缓存中获取用户信息
      let user = wepy.getStorageSync('user')
      try {
        // 登录了但是缓存中没有，请求接口数据获取
        if (!user) {
          let userResponse = await api.authRequest('user')
          // 状态码为 200 表示请求成功
          if (userResponse.statusCode === 200) {
            user = userResponse.data
            wepy.setStorageSync('user', user)
          }
        }
      } catch (err) {
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
      return user
    }
    // 用户是否已经登录
    checkLogin() {
      return (wepy.getStorageSync('access_token') !== '')
    }
    async updateUnreadCount() {
      if (!this.checkLogin) {
        return
      }
      let notificationResponse = await api.authRequest('user/notifications/stats', false)
      console.log('TCL: ------------------------------------------------------------------------------')
      console.log('TCL: extends -> updateUnreadCount -> notificationResponse', notificationResponse)
      console.log('TCL: ------------------------------------------------------------------------------')
      if (notificationResponse.statusCode === 200) {
        this.globalData.unreadCount = notificationResponse.data.unread_count
      }
    }
  }
</script>
